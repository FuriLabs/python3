diff --git a/Lib/argparse.py b/Lib/argparse.py
index ecc92778c5..f45a2ed4d4 100644
--- a/Lib/argparse.py
+++ b/Lib/argparse.py
@@ -1208,8 +1208,7 @@ class _SubParsersAction(Action):
         # namespace for the relevant parts.
         subnamespace, arg_strings = parser.parse_known_args(arg_strings, None)
         for key, value in vars(subnamespace).items():
-            if not hasattr(namespace, key):
-                setattr(namespace, key, value)
+            setattr(namespace, key, value)
 
         if arg_strings:
             vars(namespace).setdefault(_UNRECOGNIZED_ARGS_ATTR, [])
@@ -1843,6 +1842,11 @@ class ArgumentParser(_AttributeHolder, _ActionsContainer):
                     if action.default is not SUPPRESS:
                         setattr(namespace, action.dest, action.default)
 
+        # add any parser defaults that aren't present
+        for dest in self._defaults:
+            if not hasattr(namespace, dest):
+                setattr(namespace, dest, self._defaults[dest])
+
         # parse the arguments and exit if there are any errors
         if self.exit_on_error:
             try:
@@ -1853,11 +1857,6 @@ class ArgumentParser(_AttributeHolder, _ActionsContainer):
         else:
             namespace, args = self._parse_known_args(args, namespace)
 
-        # add any parser defaults that aren't present
-        for dest in self._defaults:
-            if not hasattr(namespace, dest):
-                setattr(namespace, dest, self._defaults[dest])
-
         if hasattr(namespace, _UNRECOGNIZED_ARGS_ATTR):
             args.extend(getattr(namespace, _UNRECOGNIZED_ARGS_ATTR))
             delattr(namespace, _UNRECOGNIZED_ARGS_ATTR)
diff --git a/Lib/test/test_argparse.py b/Lib/test/test_argparse.py
index ab5f35f0be..5d8bc1427c 100644
--- a/Lib/test/test_argparse.py
+++ b/Lib/test/test_argparse.py
@@ -3057,12 +3057,6 @@ class TestSetDefaults(TestCase):
         xparser.set_defaults(foo=2)
         self.assertEqual(NS(foo=2), parser.parse_args(['X']))
 
-    def test_set_defaults_on_subparser_with_namespace(self):
-        parser = argparse.ArgumentParser()
-        xparser = parser.add_subparsers().add_parser('X')
-        xparser.set_defaults(foo=1)
-        self.assertEqual(NS(foo=2), parser.parse_args(['X'], NS(foo=2)))
-
     def test_set_defaults_same_as_add_argument(self):
         parser = ErrorRaisingArgumentParser()
         parser.set_defaults(w='W', x='X', y='Y', z='Z')
