Description: Debian: Add a distutils option --install-layout=deb
 This option:
  - installs into $prefix/dist-packages instead of $prefix/site-packages.
  - doesn't encode the python version into the egg name.
 .
 We install modules into dist-packages so that a local admin can build their
 own cpython from source, and they won't see each others' installed modules.
 This keeps Debian packaged applications working correctly, isolated from the
 local cpython.
 .
 Customize site.py to import from Debian's dist-packages layout.

Forwarded: not-needed

--- a/Lib/site.py
+++ b/Lib/site.py
@@ -7,12 +7,18 @@
 This will append site-specific paths to the module search path.  On
 Unix (including Mac OSX), it starts with sys.prefix and
 sys.exec_prefix (if different) and appends
-lib/python<version>/site-packages.
+lib/python3/dist-packages.
 On other platforms (such as Windows), it tries each of the
 prefixes directly, as well as with lib/site-packages appended.  The
 resulting directories, if they exist, are appended to sys.path, and
 also inspected for path configuration files.
 
+For Debian and derivatives, this sys.path is augmented with directories
+for packages distributed within the distribution. Local addons go
+into /usr/local/lib/python<version>/dist-packages, Debian addons
+install into /usr/lib/python3/dist-packages.
+/usr/lib/python<version>/site-packages is not used.
+
 If a file named "pyvenv.cfg" exists one directory above sys.executable,
 sys.prefix and sys.exec_prefix are set to that directory and
 it is also checked for site-packages (sys.base_prefix and
@@ -356,6 +362,8 @@
     if prefixes is None:
         prefixes = PREFIXES
 
+    is_virtual_environment = sys.base_prefix != sys.prefix or hasattr(sys, "real_prefix")
+
     for prefix in prefixes:
         if not prefix or prefix in seen:
             continue
@@ -366,10 +374,21 @@
             if sys.platlibdir != "lib":
                 libdirs.append("lib")
 
+            if is_virtual_environment:
+                sitepackages.append(os.path.join(prefix, "lib",
+                                                 "python%d.%d" % sys.version_info[:2],
+                                                 "site-packages"))
+            sitepackages.append(os.path.join(prefix, "local/lib",
+                                             "python%d.%d" % sys.version_info[:2],
+                                             "dist-packages"))
+            sitepackages.append(os.path.join(prefix, "lib",
+                                             "python3",
+                                             "dist-packages"))
+            # this one is deprecated for Debian
             for libdir in libdirs:
                 path = os.path.join(prefix, libdir,
                                     "python%d.%d" % sys.version_info[:2],
-                                    "site-packages")
+                                    "dist-packages")
                 sitepackages.append(path)
         else:
             sitepackages.append(prefix)
--- a/Lib/test/test_site.py
+++ b/Lib/test/test_site.py
@@ -286,16 +286,16 @@
         if os.sep == '/':
             # OS X, Linux, FreeBSD, etc
             if sys.platlibdir != "lib":
-                self.assertEqual(len(dirs), 2)
-                wanted = os.path.join('xoxo', sys.platlibdir,
+                self.assertEqual(len(dirs), 3)
+                wanted = os.path.join('xoxo', 'local', 'lib',
                                       'python%d.%d' % sys.version_info[:2],
-                                      'site-packages')
+                                      'dist-packages')
                 self.assertEqual(dirs[0], wanted)
             else:
-                self.assertEqual(len(dirs), 1)
+                self.assertEqual(len(dirs), 3)
             wanted = os.path.join('xoxo', 'lib',
                                   'python%d.%d' % sys.version_info[:2],
-                                  'site-packages')
+                                  'dist-packages')
             self.assertEqual(dirs[-1], wanted)
         else:
             # other platforms
--- a/Lib/pydoc.py
+++ b/Lib/pydoc.py
@@ -512,6 +512,7 @@
                                  'marshal', 'posix', 'signal', 'sys',
                                  '_thread', 'zipimport') or
              (file.startswith(basedir) and
+              not file.startswith(os.path.join(basedir, 'dist-packages')) and
               not file.startswith(os.path.join(basedir, 'site-packages')))) and
             object.__name__ not in ('xml.etree', 'test.pydoc_mod')):
             if docloc.startswith(("http://", "https://")):
